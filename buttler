#!/bin/bash

set -e

TAP_BUILD_DIR="$PWD"
TAP_BOTTLE_DIR="$TAP_BUILD_DIR/Bottle"
TAP_FORMULA_DIR="$TAP_BUILD_DIR/Formula"

TAP_NAME="pinkeen/vial"
TAP_NAME_GH="pinkeen/homebrew-vial"
TAP_PATH_GH="github.com/${TAP_NAME_GH}"
TAP_URL="https://${TAP_PATH_GH}"
TAP_BOTTLE_ROOT_URL="https://github.com/${TAP_NAME_GH}/archive"

function buttler_tap_get_path() 		{ brew tap-info "$1" --json | jq '.[0].path' -r; }
function buttler_tap_list_formulas() 	{ brew tap-info pinkeen/vial --json | jq '.[0].formula_names | .[]' -r; }
function buttler_formula_get_name() 	{ brew info "$1" --json | jq '.[0].name' -r; }
function buttler_formula_get_version()  { brew info "$1" --json | jq '.[0].installed[0].version' -r ; }

function buttler_cmd_tap() {
	local TAP="$1" URL="$2"

 	brew tap "$TAP" "$URL"

 	if [[ ! "$URL" = "http"* ]] ; then 
 		TAP_PATH="$(buttler_tap_get_path "$TAP")"

 		rm -rf "$TAP_PATH"
 		ln -sTLvf "$TAP_BUILD_DIR" "$TAP_PATH"
	fi
}

function buttler_cmd_info() {
	echo -e "--- Homebrew Config --- \n"
	brew config
	echo -e "\n--- Installed Homebrew Packages --- \n"
	brew list -1l --full-name --versions
	echo -e "\n--- Current Env --- \n"
	env
	echo -e "\n\n"
}

function buttler_cmd_audit() {
	brew audit --verbose --strict "$FORMULA"
}

function buttler_cmd_test() {
	brew test --verbose "$FORMULA"
}

function buttler_cmd_install() {
	local FORMULA="$1"

	if brew list "$FORMULA" ; then
		brew uninstall "$FORMULA"
	fi

	brew install "$FORMULA" --verbose --build-bottle --force
}

function buttler_cmd_bottle() {
	local FORMULA="$1"

	mkdir -p "$TAP_BOTTLE_DIR"

	(cd "$TAP_BOTTLE_DIR"; brew bottle "$FORMULA" --json --verbose "--root-url=$TAP_BOTTLE_ROOT_URL")
}

function buttler_cmd_bottle-write-all() {
	ls -1f "$TAP_BOTTLE_DIR/"*".json" | xargs brew bottle --write --no-commit --merge
}

function buttler_cmd_build-formula() {
	local FORMULA="$1"

	buttler_cmd_audit "$FORMULA"
	buttler_cmd_install "$FORMULA"
	buttler_cmd_test "$FORMULA"
	buttler_cmd_bottle "$FORMULA"
}

function buttler_cmd_build-tap() {
	rm -rf "$TAP_BOTTLE_DIR/"*
	
	buttler_cmd_tap "$TAP_NAME" "$TAP_BUILD_DIR"

	buttler_tap_list_formulas "$TAP_NAME" | while read FORMULA ; do
		buttler_cmd_build-formula "$FORMULA"
	done

	buttler_cmd_bottle-write-all
}

function buttler_cmd_help() {
    echo "Usage: $0 <command> [args]" >&2
    echo -e "\nCommands: "
    declare -F | grep -e " $CMD_PREFIX" | sed -e "s/^ *declare *-f *$CMD_PREFIX/ /g" | sort
}

CMD_PREFIX="buttler_cmd_"

function buttler_cmd_main() {
	CMD_LAST_ARG="${@:$#}"
	CMD_HELP=false

	if [[ "$CMD_LAST_ARG" = "--help" || "$CMD_LAST_ARG" = "-h" ]] ; then
		if [[ $# -gt 1 ]] ; then
			buttler_cmd_help "$1"
		else
			buttler_cmd_help
		fi
		
		exit 0
	fi

	CMD="$1"
	CMD_FUNC="$CMD_PREFIX$CMD"

	if [[ $# -lt 1 ]] ; then
		echo "No command specified!" >&2
		echo
		buttler_cmd_help 
	    exit 2
	fi

	if ! (type "$CMD_FUNC" 2>&1 > /dev/null) ; then
	    echo "Unknown command $CMD!" >&2
	    buttler_cmd_help
	    exit 1
	fi

	shift; "$CMD_FUNC" "$@"
}

buttler_cmd_main $@
